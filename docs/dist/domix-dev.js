!function(e){var n={};function t(s){if(n[s])return n[s].exports;var i=n[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,s){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(s,i,function(n){return e[n]}.bind(null,i));return s},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=1)}([,function(e,n,t){"use strict";t.r(n);const s=e=>{const{term:n,commandLine:t,lifecycle:s}=e,i=n.getSystem(),a=t.trim().split(" ");if(n.addLine("DOMix system manager"),1===a.length)return(e=>{let{term:n}=e;n.addLines(["How to use:","- Information: dmxsys info","- Tasks: dmxsys tasks"])})({term:n}),void s.end({result:"ok"});let l={};switch(a[1]){case"info":l=(e=>{let{term:n,params:t,system:s}=e;const i=s.domixInfo();return n.addLines(["System information:",`- ID: ${i.systemID}`]),{result:null}})({term:n,system:i,params:a});break;case"tasks":l=(e=>{let{term:n,params:t,system:s}=e;const i=s.tasks();return n.addLines(["Tasks information:",`- Launched: ${i.history.tasksLaunched}`,`- Finished: ${i.history.tasksFinished}`]),{result:null}})({term:n,system:i,params:a})}"error"===l.result&&n.addLines(["ERROR!!!",`${l.error}`]),s.end({result:"ok"})},i=e=>{let{deploySystem:n}=e;console.log("domix-plugin-dmxpm -> _installPlugin",n),n.addCommand({name:"dmxsys",description:"DOMix system manager",handler:s,extra:{}})};var a=e=>{return{config:{name:"dmxsys",provides:{commands:["dmxsys"]}},metadata:{version:"0.0.1",description:"DOMix system manager",author:{name:"Unlevel Team"}},lifecycle:{install:i,uninstall:null}}};const l={importModuleJS:e=>{let{url:n,cacheTrick:t}=e,s=`${n}?`;return s=void 0!==t?`${s}cacheTrick=${t}`:s,import(s)}},r=e=>{return{config:{name:"dmxpm"},metadata:{version:"0.0.1",description:"DOMix package manager",author:{name:"Unlevel Team"}},lifecycle:{install:()=>l,uninstall:null}}},o=e=>{const{term:n,commandLine:t,lifecycle:s}=e,i=n.system(),a=t.trim().split(" ");if(1===a.length)return(e=>{let{term:n}=e;n.addLines(["How to use:","- Manage plugins: dmxpm plugins","- Manage modules: dmxpm modules"])})({term:n}),void s.end({result:"ok"});let l={};switch(a[1]){case"plugins":l=(e=>{let{term:n,params:t,system:s,lifecycle:i}=e;const a=s.packages(),l=s.library(),r=a.plugins.info();t.length<3&&n.addLines(["Plugins:",`- Definitions: ${r.total}`,`- Installed: ${r.installed}`]);const o=t[2],d=t[3];switch(o){case"define":n.addLine(`Define plugin at: ${d}`,{updateRender:!0});const e=l.modules.get({name:"dmxpm"});i.wait=!0,e.importModuleJS({url:d,cacheTrick:Date.now()}).then(e=>{const t=e.default.defineDOMixPlugin();n.addLines([`- name: ${t.config.name}`,`- version: ${t.metadata.version}`]),a.plugins.define({pluginDefinition:t}),i.end({result:"ok"})}).catch(e=>{console.log("ERROR!!!",e),i.end({result:"error"})});break;case"install":n.addLine(`Install plugin: ${d}`,{updateRender:!0}),a.plugins.install({name:d}),n.addLine("...plugin installed");break;case"list":n.addLine("List of plugins:"),Object.values(r.plugins).filter(e=>e.installed).forEach(e=>{n.addLine({text:`- ${e.name}`,updateRender:!1})});break;case"listdefs":n.addLine("List of plugins definitions:"),Object.keys(r.plugins).forEach(e=>{n.addLine(`- ${e.name}`)})}return{result:null}})({term:n,system:i,params:a,lifecycle:s});break;case"modules":l=(e=>{let{term:n,params:t,system:s,lifecycle:i}=e;const a=s.library(),l=a.modules.info();t.length<3&&n.addLines(["Modules:",`- Definitions: ${l.total}`,`- Installed: ${l.installed}`]);const r=t[2],o=t[3];switch(r){case"define":n.addLine({text:`Define module at: ${o}`,updateRender:!0});const e=a.modules.get({name:"dmxpm"});i.wait=!0,e.importModuleJS({url:o,cacheTrick:Date.now()}).then(e=>{const t=e.default.defineDOMixModule();n.addLines([`- name: ${t.config.name}`,`- version: ${t.metadata.version}`]),a.modules.define({moduleDefinition:t}),i.end({result:"ok"})}).catch(e=>{console.log("ERROR!!!",e),i.end({result:"error"})});break;case"install":n.addLine(`Install module: ${o}`,{updateRender:!0}),a.modules.install({name:o}),n.addLine("...module installed");break;case"list":n.addLine("List of modules:"),Object.values(l.modules).filter(e=>e.installed).forEach(e=>{n.addLine(`- ${e.name}`)});break;case"listdefs":n.addLine({text:"List of module definitions:"}),Object.keys(l.modules).forEach(e=>{n.addLine({text:`- ${e.name}`,updateRender:!1})})}return{result:null}})({term:n,system:i,params:a,lifecycle:s})}void 0===s.wait&&s.end({result:"ok"}),"error"===l.result&&(n.addLines(["ERROR!!!",`${l.error}`]),s.end({result:"error"}))},d=e=>{let{deploySystem:n}=e;console.log("domix-plugin-dmxpm -> _installPlugin",{deploySystem:n}),n.modules.define({moduleDefinition:r()}),n.modules.install({name:"dmxpm"}),n.addCommand({name:"dmxpm",description:"DOMix package manager",handler:o,extra:{}})};var m=e=>{return{config:{name:"dmxpm",provides:{modules:["dmxpm"],commands:["dmxpm"]},require:{authorization:{dmxcore:!0},modules:[]}},metadata:{version:"0.0.1",description:"DOMix package manager",author:{name:"Unlevel Team"}},lifecycle:{install:d,uninstall:null}}};const u={_playground:null,_system:null,_theaterEngine:null,init:()=>{u._playground=document.querySelector("domix-playground"),u._system=u._playground.get_Theater().system,u._theaterEngine=u._playground.get_Theater()._engine,console.log("DOMixDEV -> init",{playground:u._playground,system:u._system,theaterEngine:u._theaterEngine})},init_DEV(){u.init(),u.install_plugin_dmxsys(),u.install_plugin_dmxpm()},runTests:()=>{null===u._playground&&u.init(),u.test_Worker()},test_Worker:()=>{const e=u._system.daemons.getNew_Worker(),n=`./addons/workerTest.js?${Date.now()}`;e.loadFile({url:n}).then(e=>{e._worker.onmessage=function(e){console.log("  Received msg from worker: ",e)},e._worker.postMessage("Some message to the worker in the shadows...")}),console.log("Test Worker",e)},install_plugin_dmxsys:()=>{console.log("install_plugin_dmxsys"),u._system.packages.manager.addPluginDefinition({pluginDefinition:a()}),u._system.packages.manager.installPlugin({name:"dmxsys"})},install_plugin_dmxpm:()=>{console.log("install_plugin_dmxpm"),u._system.packages.manager.addPluginDefinition({pluginDefinition:m()}),u._system.packages.manager.installPlugin({name:"dmxpm"})}};void 0===window._domixdev&&(window._domixdev=u);n.default=u}]);
//# sourceMappingURL=5d73f51b4efe49b122a9.js.map