window.domixCore=function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){window,e.exports=function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const s=()=>{const e=function(){var t=function(t,n){return e.channels[t]||(e.channels[t]=[]),e.channels[t].push({context:this,callback:n}),this},n=function(t){if(!e.channels[t])return!1;for(var n=Array.prototype.slice.call(arguments,1),s=0,r=e.channels[t].length;s<r;s++){var a=e.channels[t][s];a.callback.apply(a.context,n)}return this};return{channels:{},publish:n,subscribe:t,installTo:function(e){e.subscribe=t,e.publish=n}}}();return e},r={SIGNAL:"signal",SOCKET:"socket",MESSAGE_QUEUE:"msg_queue",ANONYMOUS_PIPE:"anonymous_pipe",NAMED_PIPE:"named_pipe",SHARED_MEMORY:"shared_memory",MESSAGE_PASING:"msg_passing",MEMORY_MAPPED_FILE:"memory_mapped_file",PPC:"protected_proc_call"};class a{constructor({type:e=r.SIGNAL}){this._type=e,this._env={},this._init()}_init(){switch(this._type){case r.SIGNAL:this._init_SIGNAL()}}_init_SIGNAL(){const e=s();this._env={mediator:e,signal:{}},e.installTo(this._env.signal),this.listen=(...e)=>{this._env.signal.subscribe(...e)},this.emit=(...e)=>{this._env.signal.publish(...e)}}}const i=({domains:e})=>{const t={_env:{domains:e},_interface:{get:e=>n().get_Domain(e),add:e=>n().add_Domain(e)},interface:()=>t._interface},n=()=>t._env.domains;return t};class o{constructor({ipc:e}){this._ipc=e,this._domains={rings:{},gates:{}},this._instance=i({domains:this})}get interface(){return this._instance.interface()}add_Domain({name:e,parent:t,kernel:n,ipc:s=this._ipc}){if(void 0!==this._domains.rings[e])throw Error("Domain already exist");if(void 0!==this._domains.gates[t])throw Error("Gate already exist");this._domains.rings[e]={name:e,parent:t,kernel:n({ipc:s,name:e})},this._domains.gates[t]={name:e,ring:this._domains.rings[e]}}get_Domain({name:e}){if(void 0===this._domains.rings[e])throw Error("Domain not found");return this._domains.rings[e].kernel}}const c=({ipc:e,domain:t})=>{const n={_env:{ipc:e,domain:t},listen:({signal:e,handler:t})=>s().ipc.listen(e,t),emit:({signal:e,message:t=""})=>s().ipc.emit(e,t)},s=()=>n._env;return n},l=({kernel:e})=>{const t={_kernel:e,_interface:{domains:{...e._domains.interface,add:({name:e,...t})=>(n().add({name:e,...t}),n().get({name:e})),listen:({domain:e,signal:t,handler:s})=>n().get({name:e}).listen({signal:t,handler:s}),emit:({domain:e,signal:t,message:s=""})=>n().get({name:e}).emit({signal:t,message:s})},getNew_IPC:(e={})=>new a(e),getNew_MicroKernel:e=>c(e)},interface:()=>t._interface},n=()=>t._kernel._domains.interface;return t};class d{constructor(){this._ipc=new a({}),this._domains=new o({ipc:this._ipc,kernelFactory:c}),this._instance=l({kernel:this})}get interface(){return this._instance.interface()}}var m={getNew_Xkernel:e=>(({baseKernel:e})=>{const{_env:t,...n}=e,s={_env:{baseKernel:e},_interface:{...n},interface:()=>s._interface};return s._env.xkernel=(({kernel:e})=>{const t={_env:{kernel:e},_interface:{mutate:{append:({extra:e})=>{for(const t of Object.keys(e))void 0===n()[t]&&(n()[t]=e[t])},adapt:({adjust:e,adapter:t})=>{void 0!==n()[e]&&(n()[e]=t(n()[e]))}}},interface:()=>t._interface},n=()=>t._env.kernel._interface;return(()=>t._env.kernel)()._interface._xkernel=t.interface(),t})({kernel:s}),s})(e)};const _=()=>{const e={_env:{layers:{},gates:{},endSignal:null},getLayer:({name:e})=>t()[e].kernel,addLoyers:({dmx_kernel:e,kernel:t})=>{const n=c();s({name:"core",parent:"kernel",dmx_kernel:e,kernel:t,setup:n._setupLayer_Core}),s({name:"system",parent:"core",dmx_kernel:e,kernel:t,setup:n._setupLayer_System}),s({name:"user",parent:"system",dmx_kernel:e,kernel:t,setup:n._setupLayer_System})},setupLayers:({bootKernel:t,endSignal:n})=>{const s=e._env.layers;e._env.endSignal=n;for(const e of Object.keys(s))r({name:e,setup:s[e].setup,bootKernel:t});e._install({bootKernel:t})},_install:({bootKernel:e})=>{const n=Object.values(t()).sort((e,t)=>e.position-t.position);for(const t of n)e.emit({signal:`${t.name}-start`})},_setupLayer_Core:({data:t,bootKernel:s,layer:r})=>{r.kernel.interface()._kernel.listen({signal:"dmx-stack",handler:({action:t,layer:s="core",stack:r})=>{switch("function"!=typeof r&&(r=e=>e),t){case"up":const t=n()[s];void 0!==t&&(r=r(e.getLayer({name:t.child})))}}})},_setupLayer_System:({data:e,bootKernel:t,layer:n})=>{},_setupLayer_User:({data:e,bootKernel:t,layer:n})=>{}},t=()=>e._env.layers,n=()=>e._env.gates,s=({name:e,parent:t,dmx_kernel:n,kernel:s,setup:r})=>{const a=c(),i=Object.keys(a._env.layers).length;a._env.layers[e]={name:e,position:i,kernel:n.domains.add({name:e,parent:t,kernel:s}),setup:r,started:!1},void 0!==t&&(a._env.gates[t]={name:`${t}-${e}`,parent:t,child:e})},r=({name:e,setup:t,bootKernel:n})=>{n.listen({signal:`${e}-start`,handler:s=>a({name:e,setup:t,data:s,bootKernel:n})}),n.listen({signal:`${e}-started`,handler:t=>i({name:e,bootKernel:n})})},a=({name:e,setup:t,data:n,bootKernel:s})=>{t({data:n,bootKernel:s,layer:c()._env.layers[e]}),s.emit({signal:`${e}-started`})},i=({name:t,bootKernel:n})=>{e._env.layers[t].started=!0,o({bootKernel:n})},o=({bootKernel:e})=>{const n=c();0===Object.values(t()).filter(e=>!1===e.started).length&&e.emit({signal:n._env.endSignal})},c=()=>e;return e},f=()=>({_time_start:null,_time_end:null,wait:!1,define:()=>{},start:()=>{},stop:()=>{},continue:null,end:()=>{},_result:null}),u=({id:e,type:t,lifecycle:n})=>{const s={_config:{id:e,type:t},_env:{lifecycle:n,controller:null},_interface:{lifecycle:n},interface:()=>s._interface};return s._env.controller=y({process:s}),s.controller=s._env.controller.interface(),s},y=({process:e})=>{const t={_env:{process:e,parent:null,children:{}},_interface:{start:e=>{if(null!==n._time_start){console.log("--- ProcessController -> child",t);const n=u(e);return n._env.parent=s._config.id,r[n._config.id]=n,n}n._time_start=Date.now(),n.start(e)},wait:e=>{n.wait=e},stop:({next:e})=>{null!==n._time_end&&(n.continue=e,n._time_end=Date.now())},end:({result:e})=>{n._result=e,n._time_end=Date.now(),null!==n.continue&&n.continue()},isFinished:()=>null!==n._time_end,info:()=>({time_start:n._time_start,time_end:n._time_end,waiting:n.wait,result:n._result})},interface:()=>t._interface},n=t._env.process._env.lifecycle,s=t._env.process,r=t._env.children;return t},p=({process:e,lifecycle:t})=>{const n={_env:{process:e,lifecycle:t},_generators:{newProcess:e=>n._env.process(e),newPLifecycle:e=>n._env.lifecycle(e)},_interface:{generateProcess:({lifecycle:e,...t})=>{const n={...s().newPLifecycle(),start:e.start};return s().newProcess({...t,lifecycle:n})},generateLifecycle:e=>s().newPLifecycle()},interface:()=>n._interface},s=()=>n._generators;return n};class g{constructor({processesFactory:e}){this._env={processesFactory:e},this._processes={},this._instance=h({manager:this}),this._controller=v({manager:this})}get interface(){return this._instance.interface()}get controller(){return this._controller.interface()}get factory(){return this._env.processesFactory.interface()}defineProcess({id:e,type:t,lifecycle:n}){return this._processes[e]=this.factory.generateProcess({id:e,type:t,lifecycle:n}),{id:e,interface:this._processes[e].interface(),controller:this._processes[e].controller}}startProcess({id:e}){this._processes[e].controller.start()}stopProcess({id:e}){this._processes[e].controller.stop()}}const h=({manager:e})=>{const t={_env:{manager:e},_interface:{processes:{define:e=>n().defineProcess(e),start:e=>n().startProcess(e),stop:e=>n().stopProcess(e)}},interface:()=>t._interface},n=()=>t._env.manager;return t},v=({manager:e})=>{const t={_env:{manager:e},_interface:{processes:{define:e=>n().defineProcess(e),start:({id:e})=>{const t=n().processes[e],r=t.interface().lifecycle;n().startProcess({id:e}),!0===r.wait&&(r.continue=()=>s(t)),s(t)},stop:e=>n().stopProcess(e)}},interface:()=>t._interface},n=()=>t._env.manager,s=e=>{null!==_process.interface().lifecycle._time_end&&delete n().processes[e._config.id]};return t};var k={definition:()=>{const e={config:{name:"system-process"},metadata:{author:{name:"Unlevel Team"}},_context:{SystemProcesses:g,ProcessesFactory:p,SystemProcess:u,ProcessLifecycle:f,manager:null},lifecycle:{install:({systemLayer:e})=>{const{SystemProcesses:n,ProcessesFactory:s,SystemProcess:r,ProcessLifecycle:a}=t();return t().manager=new n({processesFactory:s({process:r,lifecycle:a})}),e._xkernel.mutate.append({extra:t().manager.controller}),t().manager},load:e=>{}}},t=()=>e._context;return e}};class b{constructor(){this._tasks={},this._history={tasksLaunched:0,tasksFinished:0}}_getTask({id:e}){return this._tasks[e]}_addTask({id:e,type:t,lifecycle:n,...s}){this._tasks[e]={id:e,type:t,lifecycle:n,...s}}_runTask({id:e}){const t=this._tasks[e];t.lifecycle.start({task:t}),this._history.tasksLaunched++}_finishTask({id:e}){const t=this._tasks[e];void 0!==t&&(t.lifecycle.stop({task:t}),this._history.tasksFinished++)}getTasksInfo(){return{tasks:Object.values(this._tasks).reduce((e,t,n)=>(e[t.id]={id:t.id,type:t.type,description:t.metadata.description},e),{}),history:this._history}}}class x{constructor({systemLayer:e}){const t=new b;this._env={tasks:t,processes:e.processes},this._instance=w({systemTasks:this})}get interface(){return this._instance.interface()}}const w=({systemTasks:e})=>{const t={_env:{systemTasks:e},_interface:{tasks:{add:({id:e,type:r,lifecycle:a})=>{const i=(({id:e,type:t})=>{const n={_env:{task:{id:e,type:t,metadata:{description:`System task ${t}`}},process:null,controller:null,supervisor:null},definition:()=>({...s(),lifecycle:r().interface()}),controller:null,supervisor:null},s=()=>n._env.task,r=()=>n._env.controller;return n})({id:e,type:r});i._env.process=n.define({id:`task-${e}`,type:`task-${r}`,lifecycle:a}),(({task:e})=>{const t={_env:{task:e,customTask:{}},_interface:{setup:({key:e,method:n})=>{t._env.customTask[e]=n},start:e=>s().start(e),end:({result:e})=>{void 0!==t._env.customTask.end&&t._env.customTask.end({result:e}),n().controller.end({result:e}),s().finish()},stop:(e={})=>{n().controller.stop(e)},wait:e=>n().controller.wait(e),info:()=>n().controller.info()},interface:()=>t._interface},n=()=>t._env.task._env.process,s=()=>t._env.task.supervisor;e._env.controller=t,e.controller=t.interface()})({task:i}),(({task:e,manager:t})=>{const n={_env:{task:e,manager:t},_interface:{start:e=>{a().controller.start(e)},finish:()=>{s().tasks.finish({id:r()._env.task.id})}},interface:()=>n._interface},s=()=>n._env.manager,r=()=>n._env.task,a=()=>n._env.task._env.process;e._env.supervisor=n,e.supervisor=n.interface()})({task:i,manager:t.interface()}),s._addTask(i.definition())},run:({id:e})=>{s._runTask({id:e})},finish:({id:e})=>{s._finishTask({id:e}),delete s._tasks[e]},info:()=>s.getTasksInfo()}},interface:()=>t._interface},{processes:n,tasks:s}=t._env.systemTasks._env;return t};var S={definition:()=>{const e={config:{name:"system-tasks",require:{"system-process":!0}},metadata:{author:{name:"Unlevel Team"}},_context:{SystemTasks:x,tasks:null},lifecycle:{install:({systemLayer:e})=>{const{SystemTasks:n}=t();return t().tasks=new n({systemLayer:e}),e._xkernel.mutate.append({extra:t().tasks.interface}),t().tasks},load:e=>{}}},t=()=>e._context;return e}};const L=({cmdHandler:e,environment:t})=>{const n={_env:{cmdHandler:e,environment:t,subroutines:{}},_interface:{addSub:({name:e,handler:t})=>{s()[e]={name:e,handler:t}},callSub:({name:e,options:t})=>s()[e](t),environment:()=>n._env.environment},interface:()=>n._interface},s=()=>n._env.subroutines;return n},M=({stack:e})=>{const t={_env:{stack:e},call:e=>n()._env.cmdHandler({...n()._env.environment,lifecycle:e})},n=()=>t._env.stack;return t};class D{constructor(){this._factory={newCallStack:e=>L(e),newSystemCall:e=>M(e)},this._instance=P({systemCalls:this})}get factory(){return this._factory}get interface(){return this._instance.interface()}}const P=({systemCalls:e})=>{const t={_env:{systemCalls:e},_interface:{syscall:{newStack:e=>n().factory.newCallStack(e),newCall:e=>n().factory.newSystemCall(e)}},interface:()=>t._interface},n=()=>t._env.systemCalls;return t};var E={definition:()=>{const e={config:{name:"system-call",require:{}},metadata:{author:{name:"Unlevel Team"}},_context:{SystemCalls:D,SystemCallsInstance:P,SystemCall:M,CallStack:L,sysCalls:null},lifecycle:{install:({systemLayer:e})=>{const{SystemCalls:n}=t();return t().sysCalls=new n,e._xkernel.mutate.append({extra:t().sysCalls.interface}),t().sysCalls},load:e=>{}}},t=()=>e._context;return e}};const O={INT:0,SYMBOLS:1,ADDRESS:2,CONTROL:3,MEMORY:4,BACKPLANE:5};var I=e=>(({sys:e,signal:t})=>{const n={_env:{bus:{},sys:e,signal:t,actions:O},_listener:({action:e,...t})=>{console.log("--- SysBUS ->",{action:e,...t});const n=s.actions;switch(e){case n.INT:break;case n.SYMBOLS:console.log("  -> Some symbols...")}},_interface:{},interface:()=>n._interface},s=n._env;return e._kernel.listen({signal:s.signal,handler:n._listener}),n})(e),C=e=>(({bus:e})=>{const t={_env:{bus:e},_interface:{symbols:()=>{const e={action:s.actions.SYMBOLS};n().emit({signal:s.signal,message:e})}},interface:()=>t._interface},n=()=>t._env.bus._env.sys._kernel,s=t._env;return s.signal=e._env.signal,s.actions=e._env.actions,t})(e);const T=()=>{const e={_env:{methods:{}},_interface:{control:()=>e._env.methods},interface:()=>e._interface};return e},K=({policy:e,mechanism:t})=>{const n={_env:{policy:e,mechanism:t},_interface:{setMechanism:({methods:e})=>{s()._env.methods=e}},interface:()=>n._interface},s=()=>n._env.mechanism;return n};var N={getNew_SYSDEV:e=>(({type:e})=>{const t={_config:{type:e},_env:{controller:null},_interface:{controller:null,newController:e=>K(e),newMechanism:e=>T()},interface:()=>t._interface},n=K({policy:{},mechanism:T()});return t._env.controller=n,t._interface.controller=n.interface(),t})(e)};const F=()=>{const e={_interface:{install:()=>{},load:e=>{},unload:()=>{}},interface:()=>e._interface};return e},$=()=>{const e={_env:{def:{config:{name:"",require:{}},metadata:{author:{name:""}},_context:{id:null,devType:null,driver:null},lifecycle:{install:({systemLayer:e,id:t,driver:n})=>{const r=e.devices,{devType:a}=s();return r.manage.define({id:t,type:a}),r.manage.install({id:t,driver:n}),s().id=t,s().driver=n,n},load:e=>{s().driverLC.interface().load()}}},driverLC:F(),engine:null},_interface:{define:({type:e=(void 0).CHAR,name:t="",author:s="",require:r={}})=>{n().config.name=t,n().metadata.author=s,n().require=r,n()._context.devType=e},params:()=>{}},interface:()=>e._interface},t=()=>e._env,n=()=>e._env.def;e.deploy=()=>(({driver:e})=>{const t={_env:{driver:e,dev:null},_interface:{install:({dev:e})=>{n().dev=e;const t=e.interface().controller;s().driverLC.interface().install(),t.setMechanism({methods:s().engine})},load:e=>s().driverLC.load(e)},interface:()=>t._interface},n=()=>t._env,s=()=>t._env.driver;return t})({driver:t()});const s=()=>e._env.def._context;return e};var j={DriverModules:({coreLayer:e})=>{const t={_env:{coreLayer:e,modules:e.modules},_interface:{create:$,make:({module:e,engine:t})=>{e._env.engine=t,n.define({def:e._env.def})},install:({driver:e})=>{const t=e._env.def,r=s._kernel.stack.up();n.install({name:t.config.name,env:{systemLayer:r.interface(),id:t.config.name,driver:e.deploy()}})}},interface:()=>t._interface},n=t._env.modules,s=t._env.coreLayer;return t}};const{DriverModules:A}=j;var H={SystemDevices:class{constructor({coreLayer:e,systemLayer:t}){this._bus=I({sys:t,signal:"sys-bus"}),this._manager=(({bus:e,devMaker:t})=>{const n={_env:{devices:{},bus:e,devMaker:t},_interface:{define:({id:e,type:t})=>{r()[e]=a({type:t})},install:({id:e,driver:t})=>{const n=r()[e];return n._env.controller=t.interface(),n._env.controller.install({dev:n})},list:()=>Object.keys(r()),ksymbols:()=>s().symbols()},interface:()=>n._interface},s=()=>n._env.bus.interface(),r=()=>n._env.devices,a=e=>n._env.devMaker.getNew_SYSDEV(e);return n})({bus:C({bus:this._bus}),devMaker:N}),this._drivers=(({modMaker:e})=>{const t={_env:{drivers:{},modMaker:e},_interface:{define:({id:e,type:t})=>{const r={id:e,def:s.create()};r.control=r.def.interface(),r.control.define({type:t,name:e}),n()[e]=r},get:({id:e})=>n()[e],make:({id:e})=>s.make({module:n()[e].def,engine:{main:()=>{}}}),install:({id:e})=>{s.install({driver:n()[e].def})},list:()=>Object.keys(n())},interface:()=>t._interface},n=()=>t._env.drivers,s=e.interface();return t})({modMaker:A({coreLayer:e})}),this._instance=(({sysdev:e})=>{const t={_dev:{sysdev:e},_interface:{devices:{manage:e._manager.interface(),drivers:e._drivers.interface()}},interface:()=>t._interface};return t})({sysdev:this})}get interface(){return this._instance.interface()}}},R={definition:({coreLayer:e})=>{const t={config:{name:"system-devices",require:{}},metadata:{author:{name:"Unlevel Team"}},_context:{...H,coreLayer:e,sysdev:null},lifecycle:{install:({systemLayer:e})=>{const{SystemDevices:t,coreLayer:s}=n(),r=new t({coreLayer:s,systemLayer:e});return e._xkernel.mutate.append({extra:r.interface}),n().sysdev=r,r},load:e=>{}}},n=()=>t._context;return t}};const{_INODES_TYPES:U,Inode:Y}={_INODES_TYPES:{FILE:0,DIRECTORY:1,HARDLINK:2,SOFTLINK:3,SPECIAL:4},Inode:({id:e,dev:t,type:n,parent:s=null,metadata:r={}})=>({id:e,dev:t,type:n,parent:s,metadata:r,open:null,release:null,read:null,write:null})};var q={FSContext:({id:e})=>{const t={_env:{id:e,root:null,iNodes:{},dev:null},_interface:{add:({id:e,...n})=>{t._env.iNodes[e]={id:e,...n}},get:({id:e})=>t._env.iNodes[e],remove:({id:e})=>{delete t._env.iNodes[e]}},interface:()=>t._interface},n=Y({id:e,dev:t._env.dev,type:U.SPECIAL});return n.metadata={context:t},t._env.root=n,t},FSAgent:({context:e})=>{const t={_env:{context:e},_interface:{file:{get:()=>{},set:()=>{},delete:()=>{}},directory:{get:e=>{const t=n().get({id:e}),s={};return s.name=t.metadata.name,s.files=t.metadata.files,s.actions={open:t.open,read:t.read,write:t.write,release:t.release,list:()=>{}},s},set:({id:e,parent:t,name:s})=>{const r=n().get({id:e});r.parent=void 0!==t?t:r.parent,r.metadata.name=void 0!==s?s:r.metadata.name},delete:()=>{}}},interface:()=>t._interface},n=()=>e.interface();return t}};const{FSContext:G,FSAgent:B}=q,W=({fs:e})=>{const t={_env:{fs:e},_interface:{fs:{manage:()=>{},drivers:()=>{}}},interface:()=>t._interface};return t};var X={FileSystem:class{constructor(){this._instance=W({fs:this}),this._context=G({}),this._agent=B({context:this._context})}get interface(){return this._instance.interface()}},FSInstance:W};const{FileSystem:V}=X;var Q={definition:()=>{const e={config:{name:"system-fs",require:{}},metadata:{author:{name:"Unlevel Team"}},_context:{FileSystem:V,fs:null},lifecycle:{install:({systemLayer:e})=>{const{FileSystem:n}=t();return t().fs=new n,e._xkernel.mutate.append({extra:t().fs.interface}),t().fs},load:e=>{}}},t=()=>e._context;return e}},z=({systemLayer:e})=>{const t={_env:{manager:e.processes},_interface:{newProcess:({id:e,lifecycle:t})=>{n.define({id:`sys-stream-${e}${Date.now()}`,type:"sys-stream",lifecycle:t})}},interface:()=>t._interface},n=t._env.manager;return t};const J={stdin:0,stdout:1,stderr:2},Z={iterator:0,syscall:1},ee=({id:e,type:t,process:n})=>{const s={_config:{id:e,type:t,controller:null},_env:{process:n},_interface:{controller:()=>s._config.controller.interface()},interface:()=>s._interface};return s._config.controller=te({stream:s}),s},te=({stream:e})=>{const t={_env:{stream:e,mode:Z.iterator,value:null},_interface:{mode:e=>n().mode=Z[e],value:e=>_val?n().value=e:n().value},interface:()=>t._interface},n=()=>t._env;return t};var ne=()=>{const e={_types:{std:J},_interface:{createStream:({id:t,family:n="std",type:s,process:r=null})=>ee({id:t,type:e._types[n][s],process:r}),families:()=>Object.keys(e._types)},interface:()=>e._interface};return e};const se=({factory:e})=>{const t={_env:{factory:e},_config:{streams:{},operators:{}},_interface:{add:e=>{const t=s().createStream(e);n()[t._config.id]=t},get:e=>n()[e]},newOperator:()=>{const e=`op-${Date.now()}`;return r()[e]=re({manager:t}),{id:e,controller:r()[e].interface()}},factory:()=>t._env.factory,interface:()=>t._interface},n=()=>t._config.streams,s=()=>t._env.factory.interface(),r=()=>t._config.operators;return t},re=({manager:e})=>{const t={_env:{manager:e,streams:{}},_interface:{add:({id:e,...t})=>{n().add({id:e,...t}),s()[e]=n().get(e)},get:e=>s()[e]},interface:()=>t._interface},n=()=>t._env.manager.interface(),s=()=>t._env.streams;return t};var ae={StreamsManager:se,SystemStreams:class{constructor({systemLayer:e}){this._manager=se({factory:ne()}),this._instance=(({streams:e})=>{const t={_env:{streams:e},_interface:{streams:{newOperator:()=>n.newOperator()}},interface:()=>t._interface},n=t._env.streams._manager;return t})({streams:this}),this._processMaker=z({systemLayer:e})}get interface(){return this._instance.interface()}},StreamsOperator:re},ie={definition:()=>{const e={config:{name:"system-streams",require:{"system-process":!0}},metadata:{author:{name:"Unlevel Team"}},_context:{...ae,streams:null},lifecycle:{install:({systemLayer:e})=>{const{SystemStreams:n}=t();return t().streams=new n({systemLayer:e}),e._xkernel.mutate.append({extra:t().streams.interface}),t().streams},load:e=>{}}},t=()=>e._context;return e}};const oe=({id:e,type:t="annonymous"})=>({_config:{id:e,type:t},_env:{in:null,out:null}}),ce=()=>({_config:{seq:{}}});class le{constructor(){this._instance=de({pipelines:this})}get interface(){return this._instance.interface()}}const de=({pipelines:e})=>{const t={_env:{pipelines:e},_interface:{pipelines:{create:()=>{}}},interface:()=>t._interface};return t};var me={definition:()=>{const e={config:{name:"system-pipelines",require:{"system-streams":!0}},metadata:{author:{name:"Unlevel Team"}},_context:{SystemPipelines:le,PipeLinesInstance:de,Pipeline:ce,SytemPipe:oe,pipelines:null},lifecycle:{install:({systemLayer:e})=>{const{SystemPipelines:n}=t();return t().pipelines=new n,e._xkernel.mutate.append({extra:t().pipelines.interface}),t().pipelines},load:e=>{}}},t=()=>e._context;return e}};const _e={config:{name:"",require:{}},metadata:{description:"",author:{name:"",email:""}},lifecycle:{install:null,load:null,unload:null,uninstall:null}},fe=({def:e,env:t={}})=>{const n={_def:e,_env:t,install:()=>s().install(n._env)},s=()=>n._def.lifecycle;return n};class ue{constructor(){this._defs={},this._mods={}}newDEF({name:e}){({..._e}).config.name=e}addDEF({def:e}){if(void 0!==this._defs[e.config.name])throw Error("Defintion already exists");this._defs[e.config.name]=e}install({name:e,env:t}){const n=this._defs[e];if(void 0===n)throw Error("Defintion not found");const s=fe({def:n,env:t}).install();this._mods[e]={name:e,def:n,module:s}}info(){return{modules:Object.values(this._defs).reduce((e,t,n)=>(e[t.config.name]={name:t.config.name,metadata:t.metadata,installed:void 0!==this._mods[t.config.name]},e),{}),total:Object.keys(this._defs).length,installed:Object.keys(this._mods).length}}}const ye=({manager:e})=>{const t={_env:{manager:e},_interface:{modules:{define:e=>n().addDEF(e),install:e=>n().install(e),info:e=>n().info(e)}},interface:()=>t._interface},n=()=>t._env.manager;return t};class pe{constructor({coreLayer:e}){this._coreLayer=e,this._modules=new ue,this._instance=ye({manager:this._modules}),this._coreLayer._xkernel.mutate.append({extra:this._instance.interface()})}make({bootKernel:e}){e.listen({signal:"modules-start",handler:this._setupModules}),this._defineModules()}_defineModules(){const e=this._coreLayer.modules;e.define({def:k.definition()}),e.define({def:S.definition()}),e.define({def:E.definition()}),e.define({def:R.definition({coreLayer:this._coreLayer})}),e.define({def:ie.definition()}),e.define({def:me.definition()}),e.define({def:Q.definition()})}install({bootKernel:e}){const t=this._coreLayer;e.emit({signal:"modules-start",message:{coreLayer:t,bootKernel:e}})}_setupModules({coreLayer:e,bootKernel:t}){const n=e.modules.info().modules,s=e._kernel.stack.up();Object.values(n).forEach(t=>{e.modules.install({name:t.name,env:{systemLayer:s.interface()}})}),t.emit({signal:"modules-started",message:{coreLayer:e}})}}const ge=({dmx_kernel:e,...t})=>{const n=e.getNew_MicroKernel({...t,ipc:e.getNew_IPC()}),s=m.getNew_Xkernel({baseKernel:n}),r=s.interface();r._xkernel.mutate.append({extra:{stack:{up:()=>{let e=null;return i().emit({signal:"dmx-stack",message:{action:"up",stack:t=>(e=t,t)}}),e}}}});const a={_env:{xkernel:s},_kernel:r},i=()=>a._kernel;return a},he=({kernel:e})=>{e._env.xkernel.interface().mutate.adapt({adjust:"domains",adapter:e=>{const t={_mutate:{adjust:e},...e,get:e=>{const t=n().get(e);return console.log("  --\x3e adapter doamins get",{_options:e,_result:t}),t}},n=()=>t._mutate.adjust;return t}})},ve=({kernelStack:e})=>{const{kernelWrapper:t,domains:n}=e,{_xkernel:s,...r}=t.interface();return{_env:{kernelWrapper:t,xkernel:s,domains:n},layers:{core:n.getLayer({name:"core"}).interface(),system:n.getLayer({name:"system"}).interface(),user:n.getLayer({name:"user"}).interface()}}},ke=({dmx_kernel:e,modify:t,xkLib:n})=>{const s={_env:{dmx_kernel:e,modify:t,xkLib:n},_interface:{newKernel:e=>{const{xkLib:t,modify:n}=r(),s=a().newMicroKernel(e),i=t.getNew_Xkernel({baseKernel:s});return n({kernel:i}),i},newMicroKernel:e=>ge({...e,dmx_kernel:r().dmx_kernel})},interface:()=>s._interface},r=()=>s._env,a=()=>s._interface;return s},be=({kernel:e,domains:t,modules:n,bootKernel:s})=>{const r={_env:{kernel:e,domains:t,modules:n,bootKernel:s,signal:"domains-setup-finish"},boot:()=>{const e=a(),t=e.signal,n=e.bootKernel._kernel;n.listen({signal:t,handler:t=>{e.modules.make({bootKernel:n}),e.modules.install({bootKernel:n}),e.kernel.domains.emit({domain:"kernel",signal:"kernel-started"})}}),e.domains.setupLayers({endSignal:t,bootKernel:n})},_setupModules:()=>{}},a=()=>r._env;return r};class xe extends d{constructor(){super();const e=this.interface;this._domains._domains.rings.kernel={name:"kernel",kernel:e.getNew_MicroKernel({ipc:this._ipc})};const t=m.getNew_Xkernel({baseKernel:e});he({kernel:t}),this._kernelStack={kernelWrapper:t,kernel:null,domains:_(),modules:null},this._KernelAccessPoint=ve;const n=ke({dmx_kernel:this.interface,modify:he,xkLib:m});this._kernelFactory={factory:n,interface:n.interface()},this._publicStack=null,this._init(),this._boot()}get info(){return DOMIX_KERNEL_INFO}get stack(){return this._publicStack}getNew_MicroKernel(e){return ge({...e,dmx_kernel:this.interface})}_init(){this._kernelStack.kernel=this._kernelStack.kernelWrapper.interface();const e=this.interface;e.domains.get({name:"kernel"}).listen({signal:"kernel-start",handler:this._setupLayer_Kernel}),e.domains.emit({domain:"kernel",signal:"kernel-start",message:{dmx_kernel:e,instance:this,factory:this._kernelFactory.interface}})}_boot(){const e=this._kernelStack.domains.getLayer({name:"core"}).interface();this._kernelStack.modules=new pe({coreLayer:e}),be({kernel:this.interface,domains:this._kernelStack.domains,modules:this._kernelStack.modules,bootKernel:this.getNew_MicroKernel()}).boot()}_setupLayer_Kernel({dmx_kernel:e,instance:t,factory:n}){e.domains.get({name:"kernel"}).listen({signal:"kernel-started",handler:e=>{t._publicStack=t._KernelAccessPoint({kernelStack:t._kernelStack})}}),t._kernelStack.domains.addLoyers({dmx_kernel:e,kernel:n.newKernel})}}t.default={newKernel:()=>(()=>new xe)()}}])},function(e,t,n){"use strict";n.r(t);class s{constructor({system:e}){this._env={system:e,systemLayer:e._kernel.stack.layers.system}}_addTask({id:e,type:t,lifecycle:n}){this._env.systemLayer.tasks.add({id:e,type:t,lifecycle:n})}_runTask({id:e}){this._env.systemLayer.tasks.run({id:e})}getTasksInfo(){return this._env.systemLayer.tasks.info()}runCommand({cmdHandler:e,command:t,setupTask:n,...s}){const r=this._env.systemLayer,a=Date.now();let i=null;const o={id:`${t}${a}`,type:"command",metadata:{description:`task for command ${t}`},config:{command:t,...s.config},lifecycle:{start:({task:e})=>{void 0!==n&&e.lifecycle.setup(n({task:e}));const t=d.call(e.lifecycle);return i=e.lifecycle.info(),t}}},c=r.streams.newOperator();c.controller.add({id:"in",type:"stdin"}),c.controller.add({id:"out",type:"stdout"}),o.config._streams=c;const l=r.syscall.newStack({cmdHandler:e,environment:o.config}),d=r.syscall.newCall({stack:l});return this._addTask(o),this._runTask({id:o.id}),{command:t,task:{id:`${o.id}`,...i}}}}var r={getNew_TaskManager:e=>new s(e)};const a=({cli:e})=>{const t={_env:{cli:e,directives:{core:{},extra:{}}},_interface:{add:({layer:e="extra",type:n,command:s,cmdHandler:r,description:a})=>{t._env.directives[e][s]=(({type:e,command:t,cmdHandler:n,description:s})=>{return{type:e,command:t,cmdHandler:n,description:s}})({type:n,command:s,cmdHandler:r,description:a})},get:({layer:e,command:n})=>t._env.directives[e][n],info:()=>{return{core:Object.values(t._env.directives.core).map(e=>({name:e.command,description:e.description})),extra:Object.values(t._env.directives.extra).map(e=>({name:e.command,description:e.description}))}}},interface:()=>t._interface};return t},i=({cli:e})=>{const t={_env:{cli:e},_config:{type:"domix"},_interface:{commands:{exec:({command:e,cmdHandler:t,...s})=>{return n().runCommand({command:e,cmdHandler:t,...s})}}},interface:()=>t._interface},n=()=>t._env.cli._env.tasks;return t};class o{constructor({system:e}){this._env={system:e,tasks:e._tasks},this._interpreter=i({cli:this}),this._directives=a({cli:this})}get interface(){return this._interpreter.interface()}get directives(){return this._directives.interface()}clone(){const e=new o({system:this._env.system});return e._directives._env.directives={...this._directives._env.directives},e}}const c=({cli:e})=>{const t={_env:{cli:e},_interface:{add:({name:e,description:t="",handler:s,extra:r={},isCore:a=!1})=>{const i=n().cli.directives;if(void 0!==i.get({layer:"core",command:e})||void 0!==i.get({layer:"extra",command:e}))throw new Error("Command duplicated");const o=a?"core":"extra";i.add({layer:o,command:e,description:t,cmdHandler:s,extra:r})},exec:({command:e="",data:t,commandLine:s="",term:r,setupTask:a})=>{const i=n().cli.directives;let o=i.get({layer:"core",command:e});if(void 0===o&&(o=i.get({layer:"extra",command:e})),void 0===o)throw new Error(`Command not found: ${e}`);return{result:n().cli.interface.commands.exec({command:e,cmdHandler:o.cmdHandler,setupTask:a,config:{term:r,data:t,commandLine:s,extra:o.extra}}).task.result,command:e,commandLine:s}},info:()=>{const e=n().cli.directives.info();return{commands:e.core,commandsExtra:e.extra}}},interface:()=>t._interface},n=()=>t._env;return t},l=({xshell:e})=>{const t={_env:{xshell:e},_interface:{set:e=>{n().cli=e},get:()=>n().cli},interface:()=>t._interface},n=()=>t._env.xshell._config;return t};class d{constructor({system:e}){this._config={system:e,cli:e._cli},this._cli=l({xshell:this}),this._commands=c({cli:this._config.cli}),this._interface=this._commands.interface()}get cli(){return this._cli.interface().get()}set cli({cli:e,clone:t=!0}){this._cli.interface().set(t?e.clone():e)}get interface(){return this._interface}}const m=({system:e})=>{const t=e.library,n={modules:{get:e=>t.getModule(e)}};return{deploy:()=>({deploySystem:n})}},_=({library:e})=>{const t={id:`libraryInstance-${Date.now()}`,library:e,_interface:{modules:{get:e=>t.library.getModule(e),info:e=>t.library.getModulesInfo(e),define:e=>t.library.addModuleDefinition(e),install:e=>t.library.installModule(e)}},interface:()=>t._interface};return t};class f{constructor({system:e}){this._environment={system:e},this._modulesDEFS={},this._modules={}}getNewInstance(){return _({library:this})}addModuleDefinition({moduleDefinition:e}){if(this._modulesDEFS[e.config.name])throw Error("Module definition already exist");this._modulesDEFS[e.config.name]=e}installModule({name:e}){const t=this._modulesDEFS[e];if(void 0===t)throw Error("Module definition not found");const{system:n}=this._environment,s=m({system:n}),r=t.lifecycle.install(s.deploy());this._modules[e]={name:e,definition:t,module:r},n._kernel.stack.layers.core._kernel.emit({signal:"module_installed",message:{name:e}})}getModulesInfo(){return{modules:Object.values(this._modulesDEFS).reduce((e,t,n)=>(e[t.config.name]={name:t.config.name,metadata:t.metadata,installed:void 0!==this._modules[t.config.name]},e),{}),total:Object.keys(this._modulesDEFS).length,installed:Object.keys(this._modules).length}}addModule({name:e,description:t,module:n,extra:s=null}){this._modules[e]={name:e,description:t,module:n,extra:s}}getModule({name:e}){return this._modules[e].module}}class u{constructor(){this._worker=null,this._state=null,this.loadFile=this.loadFile.bind(this)}get state(){return this._state}loadFile({url:e}){return new Promise(async(t,n)=>{try{const n=await fetch(e);if(!n.ok)throw new Error("Network response was not ok.");const s=new Blob([await n.text()],{type:"text/javascript"}),r=URL.createObjectURL(s);this._worker=new Worker(r),this._state="loaded",t(this)}catch(e){console.log("There has been a problem with your fetch operation: ",e.message),n(e)}})}postMessage({msg:e}){this._worker.postMessage(e)}onMessage(e){return this._worker.onmessage=e}}class y{constructor({system:e}){this._environment={system:e},this._daemons={},this._daemonsDEFS={}}addDaemontDefinition({daemonDefinition:e}){this._daemonsDEFS[e.daemonInterface.config.name]=e}installDaemon({name:e}){const{system:t}=this._environment,{daemonInterface:n}=this._daemonsDEFS[e];n.lifecycle.install({system:t})}}var p={getNew_DaemonsManager:(e={})=>new y(e),getNew_Worker:(e={})=>new u(e)};const g=(e={})=>{return{config:{...e.config},metadata:{...e.metadata},lifecycle:{install:null,unistall:null}}},h=({definition:e})=>{return{name:e.config.name,definition:e}},v=({system:e})=>{const t=e.library,n={modules:{define:e=>t.addModuleDefinition(e),install:e=>t.installModule(e),get:e=>t.getModule(e)},addCommand:t=>e._xshell.interface.add(t)};return{deploy:()=>({deploySystem:n})}},k=({manager:e})=>{const t={id:`packagesInstance-${Date.now()}`,manager:e,_interface:{plugins:{createDEF:e=>g(_options),define:e=>t.manager.addPluginDefinition(e),install:e=>t.manager.installPlugin(e),info:e=>t.manager.getPluginsInfo(e)}},interface:()=>t._interface};return t};class b{constructor({system:e}){this._environment={system:e},this._pluginsDEFS={},this._plugins={}}getNewInstance(){return k({manager:this})}addPluginDefinition({pluginDefinition:e}){if(this._pluginsDEFS[e.config.name])throw Error("Plugin definition already exist");this._pluginsDEFS[e.config.name]=e}installPlugin({name:e}){const t=this._pluginsDEFS[e];if(void 0===t)throw Error("Plugin definition not found");const{system:n}=this._environment,s=v({system:n});t.lifecycle.install(s.deploy()),this._plugins[e]=h({definition:t}),n._kernel.stack.layers.core._kernel.emit({domain:"system",signal:"plugin_installed",message:{name:e}})}getPluginsInfo(){return{plugins:Object.values(this._pluginsDEFS).reduce((e,t,n)=>(e[t.config.name]={name:t.config.name,metadata:t.metadata,installed:void 0!==this._plugins[t.config.name]},e),{}),total:Object.keys(this._pluginsDEFS).length,installed:Object.keys(this._plugins).length}}}var x={defineDOMixPlugin:g,getNew_PackagesManager:(e={})=>new b(e)};n(0);const w={version:"0.0.1",build:51,stable:"alpha",mode:"develop"};w.versionIRI=`/core/${w.version}-${w.stable}/${w.build}/${w.mode}`;const S=({system:e})=>{const t={id:`systemInstance-${Date.now()}`,system:e,xshell:e._xshell.interface,_library:e.library.getNewInstance(),_packages:e.packages.manager.getNewInstance(),_interface:{commands:{exec:e=>t.xshell.exec(e),info:e=>t.xshell.info(e)},library:()=>t._library.interface(),packages:()=>t._packages.interface(),domixInfo:()=>({systemID:t.system._id,...w}),tasks:()=>t.system._tasks.getTasksInfo(),layer:()=>t.system.kernel.domains.get({name:"system"}).interface()},interface:()=>t._interface};return t};const L={list(e){const t=e.term,n=e.lifecycle,s=t.getSystem().commands.info();t.addLine("Command List:"),t.addLine("Core Commands:"),s.commands.map(e=>{t.addLine(`- ${e.name} -> ${e.description}`)}),t.addLine(`Total Core commands: ${s.commands.length}`),t.addLine("Extra Commands:"),s.commandsExtra.map(e=>{t.addLine(`- ${e.name} -> ${e.description}`)}),t.addLine(`Total Extra commands: ${s.commandsExtra.length}`),t.updateInput(),n.end({result:"ok"})},history(e){const t=e.term,n=e.lifecycle,s=t.getCommandsHistory();t.addLine("History:"),s.map(e=>{t.addLine(`${e.commandLine}`)}),t.addLine(`Total History commands: ${s.length}`),n.end({result:"ok"})},clear({term:e,lifecycle:t}){t.end({result:"ok"}),e.clear()},whoAmI(e){const t=e.term,n=t.getSystem().domixInfo(),s=e.lifecycle;t.addLines([`DOMix System ID: ${n.systemID}`,`- version: ${n.version} @build(${n.build})`,`- character: ${n.stable} @mode(${n.mode})`,`- DOMix Core IRI: ${n.versionIRI}`]),s.end({result:"ok"})}};var M={init_core_commands:({system:e})=>{const t=e._xshell.interface;t.add({name:"list",isCore:!0,description:"List the commands",handler:L.list,extra:{}}),t.add({name:"history",isCore:!0,description:"History of the commands",handler:L.history,extra:{}}),t.add({name:"clear",isCore:!0,description:"Clear the buffer",handler:L.clear,extra:{}}),t.add({name:"whoami",isCore:!0,description:"Info about this DOMix system",handler:L.whoAmI,extra:{}})}};n.d(t,"DOMixCore",(function(){return P})),n.d(t,"getNew_Core",(function(){return E}));const D={version:"0.0.1",build:51,stable:"alpha",mode:"develop"};D.versionIRI=`/core/${D.version}-${D.stable}/${D.build}/${D.mode}`;class P{constructor({id:e="default",kernel:t}){this._id=e,this._environment={library:new f({system:this})},this._kernel=t,this._init_Kernel(),this._tasks=r.getNew_TaskManager({system:this}),this._cli=new o({system:this}),this._xshell=new d({system:this}),this.daemons=p,this.packages={manager:x.getNew_PackagesManager({system:this}),definePlugin:x.defineDOMixPlugin},this._sys=S({system:this}),M.init_core_commands({system:this})}get kernel(){return this._kernel.interface}get system(){return this._sys.interface()}get library(){return this._environment.library}get version(){return D}_init_Kernel(){const e=this._kernel.stack.layers.core;console.log("DOMix kernel",{layers:this._kernel.stack.layers}),e._kernel.listen({signal:"plugin_installed",handler:e=>{console.log("---\x3e> DOMAIN SYSTEM -> plugin_installed",e)}}),e._kernel.listen({signal:"module_installed",handler:e=>{console.log("---\x3e> DOMAIN SYSTEM -> module_installed",e)}})}getNewInstance(){return S({system:this})}}const E=e=>new P(e);t.default={getNew_Core:E}}]);