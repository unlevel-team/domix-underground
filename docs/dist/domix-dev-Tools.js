window.domixDevTools=function(e){var n={};function t(a){if(n[a])return n[a].exports;var l=n[a]={i:a,l:!1,exports:{}};return e[a].call(l.exports,l,l.exports,t),l.l=!0,l.exports}return t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var l in e)t.d(a,l,function(n){return e[n]}.bind(null,l));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);const a=e=>{const{term:n,commandLine:t,lifecycle:a}=e,l=n.getSystem(),i=t.trim().split(" ");if(n.addLine("DOMix system manager"),1===i.length)return(({term:e})=>{e.addLines(["How to use:","- Information: dmxsys info","- Tasks: dmxsys tasks"])})({term:n}),void a.end({result:"ok"});let s={};switch(i[1]){case"info":s=(({term:e,params:n,system:t})=>{const a=t.domixInfo();return e.addLines(["System information:",`- ID: ${a.systemID}`]),{result:null}})({term:n,system:l,params:i});break;case"tasks":s=(({term:e,params:n,system:t})=>{const a=t.tasks();return e.addLines(["Tasks information:",`- Launched: ${a.history.tasksLaunched}`,`- Finished: ${a.history.tasksFinished}`]),{result:null}})({term:n,system:l,params:i});break;case"devices":s=(({term:e,params:n,system:t})=>{const a=t.layer().devices.manage.list();e.addLine("Devices information:");for(let n of a)e.addLine(`- ${n}`);return{result:null}})({term:n,system:l,params:i})}"error"===s.result&&n.addLines(["ERROR!!!",`${s.error}`]),a.end({result:"ok"})},l=({deploySystem:e})=>{console.log("domix-plugin-dmxpm -> _installPlugin",e),e.addCommand({name:"dmxsys",description:"DOMix system manager",handler:a,extra:{}})};var i=e=>{return{config:{name:"dmxsys",provides:{commands:["dmxsys"]}},metadata:{version:"0.0.1",description:"DOMix system manager",author:{name:"Unlevel Team"}},lifecycle:{install:l,uninstall:null}}};const s={importModuleJS:({url:e,cacheTrick:n})=>{let t=`${e}?`;return t=void 0!==n?`${t}cacheTrick=${n}`:t,import(t)}},r=e=>{return{config:{name:"dmxpm"},metadata:{version:"0.0.1",description:"DOMix package manager",author:{name:"Unlevel Team"}},lifecycle:{install:()=>s,uninstall:null}}},o=e=>{const{term:n,commandLine:t,lifecycle:a}=e,l=n.system(),i=t.trim().split(" ");if(1===i.length)return(({term:e})=>{e.addLines(["How to use:","- Manage plugins: dmxpm plugins","- Manage modules: dmxpm modules"])})({term:n}),void a.end({result:"ok"});let s={};switch(i[1]){case"plugins":s=(({term:e,params:n,system:t,lifecycle:a})=>{const l=t.packages(),i=t.library(),s=l.plugins.info();n.length<3&&e.addLines(["Plugins:",`- Definitions: ${s.total}`,`- Installed: ${s.installed}`]);const r=n[2],o=n[3];switch(r){case"define":e.addLine(`Define plugin at: ${o}`,{updateRender:!0});const n=i.modules.get({name:"dmxpm"});a.wait(!0),n.importModuleJS({url:o,cacheTrick:Date.now()}).then(n=>{const t=n.default.defineDOMixPlugin();e.addLines([`- name: ${t.config.name}`,`- version: ${t.metadata.version}`]),l.plugins.define({pluginDefinition:t}),a.end({result:"ok"})}).catch(e=>{console.log("ERROR!!!",e),a.end({result:"error"})});break;case"install":e.addLine(`Install plugin: ${o}`,{updateRender:!0}),l.plugins.install({name:o}),e.addLine("...plugin installed");break;case"list":e.addLine("List of plugins:"),Object.values(s.plugins).filter(e=>e.installed).forEach(n=>{e.addLine({text:`- ${n.name}`,updateRender:!1})});break;case"listdefs":e.addLine("List of plugins definitions:"),Object.keys(s.plugins).forEach(n=>{e.addLine(`- ${n.name}`)})}return{result:null}})({term:n,system:l,params:i,lifecycle:a});break;case"modules":s=(({term:e,params:n,system:t,lifecycle:a})=>{const l=t.library(),i=l.modules.info();n.length<3&&e.addLines(["Modules:",`- Definitions: ${i.total}`,`- Installed: ${i.installed}`]);const s=n[2],r=n[3];switch(s){case"define":e.addLine({text:`Define module at: ${r}`,updateRender:!0});const n=l.modules.get({name:"dmxpm"});a.wait(!0),n.importModuleJS({url:r,cacheTrick:Date.now()}).then(n=>{const t=n.default.defineDOMixModule();e.addLines([`- name: ${t.config.name}`,`- version: ${t.metadata.version}`]),l.modules.define({moduleDefinition:t}),a.end({result:"ok"})}).catch(e=>{console.log("ERROR!!!",e),a.end({result:"error"})});break;case"install":e.addLine(`Install module: ${r}`,{updateRender:!0}),l.modules.install({name:r}),e.addLine("...module installed");break;case"list":e.addLine("List of modules:"),Object.values(i.modules).filter(e=>e.installed).forEach(n=>{e.addLine(`- ${n.name}`)});break;case"listdefs":e.addLine({text:"List of module definitions:"}),Object.keys(i.modules).forEach(n=>{e.addLine({text:`- ${n.name}`,updateRender:!1})})}return{result:null}})({term:n,system:l,params:i,lifecycle:a})}!0!==a.info().waiting&&a.end({result:"ok"}),"error"===s.result&&(n.addLines(["ERROR!!!",`${s.error}`]),a.end({result:"error"}))},d=({deploySystem:e})=>{console.log("domix-plugin-dmxpm -> _installPlugin",{deploySystem:e}),e.modules.define({moduleDefinition:r()}),e.modules.install({name:"dmxpm"}),e.addCommand({name:"dmxpm",description:"DOMix package manager",handler:o,extra:{}})};var m=e=>{return{config:{name:"dmxpm",provides:{modules:["dmxpm"],commands:["dmxpm"]},require:{authorization:{dmxcore:!0},modules:[]}},metadata:{version:"0.0.1",description:"DOMix package manager",author:{name:"Unlevel Team"}},lifecycle:{install:d,uninstall:null}}};var u={cd:({path:e,context:n,...t})=>{void 0===e&&(e=n.args[0]),void 0===e&&(e=n.currentPath);const{fs:a}=t;return null===a.interface().queryPath({path:e}).inode?`... ${e} not found`:(n.currentPath=`${e}`,{result:!0,text:[]})},echo:({text:e,context:n})=>(void 0===e&&(e=n.args.join(" ")),e),exec:({path:e,context:n,...t})=>{if(void 0===e&&(e=n.args[0]),void 0===e)return null;const{fs:a}=t,l=a.interface().queryPath({path:e}).inode;if(null===l)return`... ${e} not found`;const i=l.dev;return null===i||void 0===i.control.exec?`... cannot run ${e}`:{result:i.control.exec({path:e,inode:l.id,metadata:l.metadata,args:n.args}),text:[]}},exit:({value:e=0,context:n})=>null,help:({context:e})=>{},ls:({path:e,context:n,...t})=>{void 0===e&&(e=n.args[0]),void 0===e&&(e=n.currentPath);const{fs:a}=t,l=a.interface(),i=l.listDir({path:e});if(null===l.queryPath({path:e}).inode)return`... ${e} not found`;let s=[".",".."];return Object.values(i).map(e=>{s.push(e.metadata.name)}),s.push(`Files ${Object.keys(i).length} ðŸ“œ`),{value:i,text:s}},printf:({text:e="",path:n,context:t})=>{},pwd:({context:e})=>e.currentPath,read:({path:e,context:n})=>{}};const c={FUNCTIONS:{TOUCH:{fn:"touch"},UNAME:{fn:"uname"}},_env:{},control:{read:e=>(console.log("  --- _DEV_CORE_FN - read -> ",{_options:e}),null),write:({data:e=null,...n})=>{console.log("  --- _DEV_CORE_FN - write -> ",{data:e,_options:n})},close:e=>{console.log("  --- _DEV_CORE_FN - close -> ",{_options:e})},exec:e=>{console.log("  --- _DEV_CORE_FN - exec -> ",{_options:e})}}},f={_create_CoreFN:({id:e,fs:n})=>{const t=Object.values(c.FUNCTIONS),a=n.interface();for(let n of t)a.newFile({id:`${e}-bin::${n.fn}`,name:n.fn,parent:`${e}-bin`,dev:c,metadata:{fn:n.fn}})},setupShell({id:e,fs:n}){f._create_CoreFN({id:e,fs:n})}},p={syntax:{cd:e=>u.cd(e),echo:e=>u.echo(e),exec:e=>u.exec(e),exit:e=>u.exit(e),help:e=>null,ls:e=>u.ls(e),printf:e=>null,pwd:e=>u.pwd(e),read:e=>null},setupShell:f.setupShell,newSHContext:()=>{return{currentPath:null,home:null,user:null,command:null,args:null,mode:null}},_DMX_SHFS:{_lib:null,default:{fs:null,cli:null,shContext:null}}};var g={defineDOMixModule:e=>{return{config:{name:"sh"},metadata:{version:"0.0.1",description:"DOMix shell",author:{name:"Unlevel Team"}},lifecycle:{install:()=>p,uninstall:null}}}};var h=e=>(({fs:e})=>{const n={_env:{fs:e,root:null},_interface:{chroot:({root:e})=>{t().root=e},newFile:({id:e,name:n,parent:a=null,dev:l=null,metadata:i})=>{const{fs:s}=t();s.agent.file.set({id:e});const r=s.agent.file.get({id:e});r.inode.parent=null!==a?a:r.inode.parent,r.inode.dev=null!==l?l:r.inode.dev,r.inode.metadata={...r.inode.metadata,...i},r.inode.metadata.name=n,s.agent.file.set(r.inode)},newDir:({id:e,name:n,parent:a})=>{const{fs:l}=t();l.agent.directory.set({id:e}),l.agent.directory.set({id:e,name:n,parent:a})},queryPath:({path:e,currentPath:n})=>{const{fs:a,root:l}=t();return{path:e,inode:a.manage.getInode({path:e,root:l})}},listDir:({path:e})=>{const n=a()._interface,{fs:l}=t(),i=n.queryPath({path:e}).inode;return l.agent.directory.list({id:i.id})}},interface:()=>n._interface},t=()=>n._env,a=()=>n;return n})(e),x=e=>(({id:e,fs:n})=>{const t=`${e}-root`;n.newDir({id:t,name:t}),n.newDir({id:`${e}-bin`,name:"bin",parent:t}),n.newDir({id:`${e}-etc`,name:"etc",parent:t}),n.newDir({id:`${e}-dev`,name:"dev",parent:t}),n.newDir({id:`${e}-home`,name:"home",parent:t}),n.newDir({id:`${e}-mnt`,name:"mnt",parent:t}),n.newDir({id:`${e}-lib`,name:"lib",parent:t}),n.newDir({id:`${e}-proc`,name:"proc",parent:t}),n.newDir({id:`${e}-tmp`,name:"tmp",parent:t}),n.newDir({id:`${e}-usr`,name:"usr",parent:t}),n.newDir({id:`${e}-var`,name:"var",parent:t}),n.chroot({root:t})})(e);const y={_lib:null,_shFS:null,cmdHandler:e=>{if(null===y._lib){const{term:n}=e;y._lib=n.getSystem().library().modules.get({name:"sh"}),y._shFS=y._lib._DMX_SHFS,y._shFS.default.cli=y,y._shFS._lib=y._lib}e.extra={...e.extra,shFS:y._shFS},(e=>{const{term:n,commandLine:t,lifecycle:a}=e,{shFS:l}=e.extra,i=l._lib;if(null===l.default.fs){const e=n.getSystem().layer(),t=h({fs:e.fs}),a="customFS-sh-default";x({id:a,fs:t.interface()}),l.default.fs=t;const s=i.newSHContext();s.home="/home",s.currentPath="/home",l.default.shContext=s,i.setupShell({id:a,fs:t})}const s=l.default.cli.interface(),r=({userInput:e,extra:t})=>{const a=t.term,l=t.lifecycle,i=s.parseCommand({commandLine:e.trim()}),o=s.exec(i);if(null!==o){let e=o.text;const t=(e=void 0===e?[o]:e).pop();for(let t of e)n.addLine({text:t});n.addLine({text:t,updateRender:!0})}if("exit"!==i.command)return null===o&&(a.addLine({text:"...What???"}),a.addLine({text:`...-???-> ${e}`,updateRender:!0})),()=>a.request({requestHandler:r,extra:{cli:s,term:a,lifecycle:l}});l.end({result:"ok"})};n.request({requestHandler:r,extra:{cli:l.default.cli.interface(),term:n,lifecycle:a}}),a.wait(!0)})(e)},_interface:{parseCommand:({commandLine:e})=>{const n=e.split(" ");return{command:n[0],params:n.splice(1),args:n}},exec:({command:e,params:n})=>{const t=y._lib.syntax,a=y._shFS.default.shContext,l=t[e];return void 0!==l?(a.command=e,a.args=n,l({context:a,shLib:y._lib,fs:y._shFS.default.fs})):null}},interface:()=>y._interface};var _={cli:y};const v=({deploySystem:e})=>{console.log("domix-plugin-sh -> _installPlugin",e),e.modules.define({moduleDefinition:g.defineDOMixModule()}),e.modules.install({name:"sh"}),e.addCommand({name:"sh",description:"DOMix shell",handler:_.cli.cmdHandler,extra:{}})};var D=e=>{return{config:{name:"sh",provides:{modules:["sh"],commands:["sh"]}},metadata:{version:"0.0.1",author:{name:"Unlevel Team"}},lifecycle:{install:v,uninstall:null}}};const b={_system:null,init:({system:e})=>{b._system=e,b.install_plugin_dmxsys(),b.install_plugin_dmxpm(),console.log("DOMix development tools -> init",{system:b._system})},install_plugin_dmxsys:()=>{console.log("  install_plugin_dmxsys"),b._system.packages.manager.addPluginDefinition({pluginDefinition:i()}),b._system.packages.manager.installPlugin({name:"dmxsys"})},install_plugin_dmxpm:()=>{console.log("  install_plugin_dmxpm"),b._system.packages.manager.addPluginDefinition({pluginDefinition:m()}),b._system.packages.manager.installPlugin({name:"dmxpm"})},install_plugin_sh:()=>{console.log("  install_plugin_sh"),b._system.packages.manager.addPluginDefinition({pluginDefinition:D()}),b._system.packages.manager.installPlugin({name:"sh"})}};n.default=b}]);